@page "/entry/{id:guid}"

@if(entry is not null)
{
	<EntryViewerComponent Entry="@entry"/>
	<br />

	if(comments is not null)
	{
		 foreach (var comment in comments.Results)
        {
			<BlazorSozluk.WebApp.Pages.EntryComment.Component.EntrtyCommentViewerComponent EntryComment="@comment" />
        }
	}

	<br />
	
	<AuthorizeView>

		<Authorized>


			<BlazorSozluk.WebApp.Pages.EntryComment.CreateEntryCommentComponent EntryId="@entry.Id"
			                                                                     EntrySubject="@entry.Subject"
																				 OnClicked="@OnCommentCreate"/>

			
		</Authorized>
	</AuthorizeView>
}




@code{
	[Parameter]
	public Guid id { get; set; }

	[Inject]
	IEntryService entryService { get; set; }

	GetEntryDetailedViewModel entry = new();



	public PagedViewModel<GetEntryCommentsViewModel> comments = new();

	private int currentPage = 1;

	protected override async Task OnParametersSetAsync()
	{
		entry = await entryService.GetEntryDetail(id);

		await RefreshComments(1);
		currentPage = comments.PageInfo.currentPage;


	}

	public async Task OnCommentCreate(CreateEntryCommentCommand command)
	{
		await entryService.CreateEntryComment(command);
		await RefreshComments(currentPage);
		

	}

	private async Task RefreshComments(int pageNumber)
	{
		comments = await entryService.GetEntryComments(entry.Id, pageNumber, 10);
	}

	


}